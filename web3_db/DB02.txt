==27강===================================================================
2. SQL연산자
   1)Between : A와 B 사이의 값을 검색할 때 사용
   2)In : 특정 목록에서 찾고자 하는 값이 있을 때 사용
   3)Like(유사검색) : 지정한 문자형태와 일치하는 자원을 검색

>>Between 연산자
--예) 급여가 5000이상이고, 6000이하인 사원들의 이름과 급여를 출력
Select first_name, salary from employees
where salary >= 5000 AND salary <= 6000;

--위의 쿼리문을 between연산자로 바꿔보자
select first_name,salary
from employees
where salary BETWEEN 5000 AND 6000;

--예) 2003년도에 입사한 사원의 정보를 사번, 이름, 입사일 순으로 출력
select employee_id, first_name, hire_date
from employees
where hire_date >= '01/01/2003' AND hire_date <= '12/31/2003';

select employee_id, first_name, hire_date
from employees
where hire_date BETWEEN '01/01/2003' AND '12/31/2003';

>>In 연산자
--예) in 연산자 없이 급여가 2200, 3200, 5000, 6800을 받는 사원들의 정보를 이름, 급여 순으로 출력
select first_name, salary
from employees
where salary = 2200 or salary = 3200 or salary = 5000 or salary = 6800;

--위의 코드를 In연산자로
select first_name, salary
from employees
where salary IN ( 2200, 3200, 5000, 6800 );

--예) 이름이 Michael, Bruce인 사원의 사번,이름,급여를 조회
select employee_id, first_name, salary
from employees
where first_name IN ( 'Michael', 'Bruce' );


>>Like(유사검색) 연산자
	% : 모든값
	_  : 하나의 값
 
예) 이름중 M으로 시작하는 사원의 사번, 이름을 출력하시오
select employee_id, first_name
from employees
where first_name LIKE 'M%';

문) 이름이 d로 끝나는 사원의 사번, 이름을 출력
select employee_id, first_name
from employees
where first_name LIKE '%d';

문) 이름의 어디든 o가 포함되어 있는 사원들의 사번,이름
select employee_id, first_name
from employees
where first_name Like '%o%';

문) 이름의 세번째 자리에 a가 들어가는 사원의 이름을 출력
select first_name
from employees
where first_name Like '__a%';

문) 이름이 H로 시작하면서 6글자 이상인 사원들의 이름을 출력
select first_name
from employees
where first_name Like 'H_____%';

문) 이름에 o가 포함되어 있으면서, a로 끝나는 모든 사원들의 이름을 출력
select first_name
from employees
where first_name Like '%o%a';

--not 
문) 이름에 o가 포함되어 있지 않고, a로 끝나지 않는 모든 사원들의 이름을 출력
select first_name
from employees
where first_name not Like '%o%a';

예)not 없이
직종이 SA_MAN, IT_PROG가 아닌 사원들의 모든 정보를 조회
select * from employees
where Job_id != 'SA_MAN' AND Job_id != 'IT_PROG';

--위의 코드에 not 연산자를 활용해보자
select * from employees
where Job_id not IN( 'SA_MAN', 'IT_PROG' );

----------------------------------------------------------------------------------------

3.정렬( order by )
 -- 질의 결과에 반한되는 row들을 정렬할때 사용
 -- order by 는 select절의 가장 마지막에 기술
 -- DESC(내림차순), ASC(오름차순: 디폴트 값)

예)사원테이블에서 급여를 많이 받는 순서대로 사번,이름,급여를 출력
select employee_id, first_name, salary
from employees
order by salary DESC;

예)사원테이블에서 급여를 많이 받는 순서대로 사번,이름,급여를 출력
    단, 급여가 같을 경우에는 입사일이 빠른 사원부터 조회하시오
select employee_id, first_name, salary, hire_date
from employees
order by salary DESC, shire_date;

문) 급여가 15000이상인 사원들의 이름, 급여, 입사일을 출력하되 입사일이 빠른 순으로 조회
select first_name, salary, hire_date
from employees
where salary >= 15000
order by  hire_date;

문) 급여가 적은 순으로 이름, 급여, 입사일을 출력하되 급여가 같다면 입사일이 빠른 순으로 조회
select first_name, salary, hire_date
from employees
order by salary , hire_date ;

------------------------------------------------------------------------------------------

4.SQL함수 : 데이터를 조작하기 위한 일종의 메서드
  1) 문자함수
  2) 숫자함수
  3) 날짜함수

--문자함수
select UPPER( first_name ) UPPER,LOWER(first_name) LOWER from employees;

예) 대소문자의 구분없이 이름이 michael인 사원들을 조사해보자
select first_name
from employees
where Lower(first_name)= 'michael';

--dual 테이블 : 사용자가 함수를 실행할때 임시로 결과를 확인하기 위한 가상의 테이블
  select UPPER('abc'), LOWER('ABC') from dual; 

예) 특정 문자를 교체하는 함수
select REPLACE('good morning','good','bad') from dual;
select REPLACE(first_name,'M','m') from employees;

예) 문자열의 길이를 가져오는 함수
select first_name, LENGTH(first_name) leng
from employees;

예) 문자열을 연결하는 키워드
select first_name, last_name, first_name ||'_'|| last_name FullName from employees;


--숫자함수
1) 반올림을 해 주는 함수 round()
	select ROUND(0.123), ROUND(0.567) from dual;
	select ROUND(0.5123,2), ROUND(0.4567,2) from dual;
2) 잘라내는 함수 trunc()
	select TRUNC(1.1234) from dual;
	select TRUNC(1.6543, 2) from dual;  
3) 나머지를 구하는 함수 mod()
	select MOD( 10, 7 ) from dual;


--날짜함수
->sysdate 는 현재 날짜를 가져오는 키워드
   -select sysdate from dual;

1)ADD_MONTHS: 특정 날짜에 개월수를 더한다
예) 오늘 날짜로부터 2개월 후의 날짜를 계산하자
select sysdate, ADD_MONTHS( sysdate, 2 ) from dual;

문) 모든 사원의 이름, 입사일, 입사일로부터 6개월 후의 날짜를 출력
select first_name, hire_date, ADD_MONTHS( hire_date, 6 ) six from employees;

문) 사번이 120번인 사원이 입사후 3년 6개월이 되는 날 퇴사했다.
    이 사원의 이름, 입사일과 퇴사일을 출력

select employee_id, first_name, hire_date, ADD_MONTHS( hire_date, 42(12*3+6 가능)) fire_date
from employees
where employee_id = 120

2) MONTHS_BETWEEN: 두 날짜 사이의 개월수를 가져온다
	select MONTHS_BETWEEN( sysdate, '11/30/2020') from dual;
	select MONTHS_BETWEEN( sysdate,hire_date) from employees;

3) TO_CHAR(): 형식에 맞도록 포맷을 변경해주는 함수
	select TO_CHAR( sysdate,'yyyy/mm/dd - day') from dual;
	select TO_CHAR( sysdate,'yy/mm/dd, hh24:mi:ss') from dual;


